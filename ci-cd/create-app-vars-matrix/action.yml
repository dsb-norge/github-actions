name: 'Create build/deploy vars for one or more DSB apps'
description: |
  Given a yaml array of application specifications this action will:
    - Convert yaml input to JSON.
    - Attempt to detect application type for each app, where type is not explicitly defined in input.
      - 'spring-boot' will be set if pom.xml is found.
      - 'vue' will be set if package.json is found (and pom.xml is not found).
      - 'maven-library' has to be set explicitly as there is no auto-detection for this.
    - For all application types:
      - Attempt to read application description for each app, where description is not explicitly defined in input.
    - For "pom.xml" application types:
      - Attempt to read java version from pom.xml for each app, where java version is not explicitly defined in input.
    - Validate the app vars structure.
    - Generate some additional dynamic app vars and add them to all apps:
      - application-version           : DSB version string.
      - application-build-timestamp   : ISO datestamp for time of creation.
      - application-image-name        : Image name to use when pusing to a registry during build.
    - Return the JSON array, escaped for github and compatible with matrix build jobs, string named 'app-vars'.
author: 'Direktoratet for samfunnssikkerhet og beredskap'
inputs:
  apps:
    description: |
      YAML list (as string) with specifications of applications to build and/or deploy.
      Required fields are:
        - application-name        - string
      For optional fields see possible inputs to the create-build-envs action.
    required: true
outputs:
  app-vars:
    description: Updated specification of applications to build and/or deploy, JSON array (as string).
    value: ${{ steps.make-matrix-compatible.outputs.APPVARS }}
  applications-version:
    description: App version is common for all apps. Return version as separate output for convenience.
    value: ${{ steps.create-app-vars-matrix.outputs.applications-version }}
runs:
  using: 'composite'
  steps:
    - name: ðŸ¦• Deno install
      shell: bash
      run: deno install
      working-directory: ${{ github.action_path }}/../

    - id: convert
      shell: bash
      env:
        INPUT_APPS: ${{ inputs.apps }}
      run: deno --allow-read --allow-write --allow-env ${{ github.action_path }}/action/1_convert.ts

    - id: validate-input
      shell: bash
      env:
        INPUT_APPVARS: ${{ steps.convert.outputs.APPVARS }}
      run: deno --allow-read --allow-write --allow-env ${{ github.action_path }}/action/2_validate-input.ts

    - id: detect-type
      shell: bash
      env:
        INPUT_APPVARS: ${{ steps.validate-input.outputs.APPVARS }}
      run: deno run --allow-read --allow-write --allow-env ${{ github.action_path }}/action/3_detect-type.ts

    - id: get-app-meta
      shell: bash
      env:
        INPUT_APPVARS: ${{ steps.detect-type.outputs.APPVARS }}
      run: deno run --allow-read --allow-write --allow-env ${{ github.action_path }}/action/4_get-app-meta.ts

    - id: detect-changes
      shell: bash
      env:
        INPUT_APPVARS: ${{ steps.get-app-meta.outputs.APPVARS }}
      run: deno run --allow-read --allow-write --allow-env --allow-run=git ${{ github.action_path }}/action/5_detect-changes.ts

    - id: validate-result
      shell: bash
      env:
        INPUT_APPVARS: ${{ steps.detect-changes.outputs.APPVARS }}
      run: deno run --allow-read --allow-write --allow-env ${{ github.action_path }}/action/6_validate-result.ts

    - id: create-app-vars-matrix
      shell: bash
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_EVENT_NUMBER: ${{ github.event.number }}
        INPUT_APPVARS: ${{ steps.validate-result.outputs.APPVARS }}
      run: deno run --allow-read --allow-write --allow-env --unstable-temporal ${{ github.action_path }}/action/7_create-app-vars-matrix.ts

    - id: make-matrix-compatible
      shell: bash
      env:
        INPUT_APPVARS: ${{ steps.create-app-vars-matrix.outputs.APPVARS }}
      run: deno run --allow-read --allow-write --allow-env ${{ github.action_path }}/action/8_make-matrix-compatible.ts
