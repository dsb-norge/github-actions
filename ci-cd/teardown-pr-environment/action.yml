name: "Tear down ephemeral PR environment in AKS"
description: |
  Removes an application and namespace from ephemeral PR environment.
author: "Peder Schmedling"
inputs:
  dsb-build-envs:
    description: |
      DSB build environment variables JSON.
      Required fields:
        See first step.
      Optional fields:
        None.
    required: true
runs:
  using: "composite"
  steps:
    # we need to verify inputs since they are optional input to create-build-envs action
    # TODO revert to @v2
    - uses: dsb-norge/github-actions/ci-cd/require-build-envs@pull-from-github-packages
      with:
        dsb-build-envs: ${{ inputs.dsb-build-envs }}
        require: |
          pr-deploy-aks-cluster-name
          pr-deploy-aks-resource-group
          pr-deploy-aks-creds
          pr-deploy-k8s-namespace
          pr-deploy-k8s-application-name

    # require pull request for this action to run
    - shell: bash
      run: |
        # Check if triggered by pull request event

        [ ! '${{ github.event_name }}' == 'pull_request' ] \
          && echo 'ERROR: teardown-pr-environment: This action should only be called by pull request events.' \
          && EXIT_CODE=1 \
          || EXIT_CODE=0
        exit ${EXIT_CODE}

    - uses: azure/login@v1
      with:
        creds: ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-aks-creds }}
    # set target kubernetes cluster to
    - uses: azure/aks-set-context@v3
      with:
        cluster-name: ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-aks-cluster-name }}
        resource-group: ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-aks-resource-group }}
        admin: "true"

    - shell: bash
      id: helm-uninstall
      run: |
        # Remove helm deployment

        if helm uninstall ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-k8s-application-name }} \
          --namespace ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-k8s-namespace }}; then
          RESULT='true'
          echo "teardown-pr-environment: 'helm uninstall' completed successfully."
        else
          RESULT='false'
          EXIT_CODE=$?
          echo "ERROR: teardown-pr-environment: 'helm uninstall' did not complete successfully, exit code '${EXIT_CODE}'. Note that this can be expected (e.g. PRs from renovate-bot)."
        fi
        echo "result=${RESULT}" >> $GITHUB_OUTPUT

    - shell: bash
      id: kubectl-delete-namespace
      run: |
        # Remove namespace

        if kubectl delete namespace ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-k8s-namespace }}; then
          RESULT='true'
          echo "teardown-pr-environment: 'kubectl delete namespace' completed successfully."
        else
          RESULT='false'
          EXIT_CODE=$?
          echo "ERROR: teardown-pr-environment: 'kubectl delete namespace' did not complete successfully, exit code '${EXIT_CODE}'. Note that this can be expected (e.g. PRs from renovate-bot)."
        fi
        echo "result=${RESULT}" >> $GITHUB_OUTPUT

    - shell: bash
      run: |
        # Log and evaluate result

        echo "teardown-pr-environment: result: 'helm-uninstall': '${{ steps.helm-uninstall.outputs.result }}'"
        echo "teardown-pr-environment: result: 'kubectl delete namespace': '${{ steps.kubectl-delete-namespace.outputs.result }}'"

        if [ ! '${{ steps.helm-uninstall.outputs.result }}' == 'true' ] && [ ! '${{ steps.kubectl-delete-namespace.outputs.result }}' == 'true' ]; then
          echo "ERROR: teardown-pr-environment: failing action since both teardown operations failed!"
          exit 1
        elif [ ! '${{ steps.helm-uninstall.outputs.result }}' == 'true' ]; then
          echo "ERROR: teardown-pr-environment: failing action since helm uninstall operation failed!"
          exit 1
        elif [ ! '${{ steps.kubectl-delete-namespace.outputs.result }}' == 'true' ]; then
          echo "ERROR: teardown-pr-environment: failing action since delete namespace operation failed!"
          exit 1
        else
          echo "teardown-pr-environment: teardown completed successfully."
        fi
