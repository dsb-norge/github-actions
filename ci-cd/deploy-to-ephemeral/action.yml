name: 'Deploy DSB app to ephemeral environment'
description: |
  Deploys a DSB app to an ephemeral namspace in a given AKS cluster using custom helm charts and Argo CD.
  Application and helm configuration is retrieved from an external git repo.
  This action will attempt to check out a branch from the configuration repo named by the field
  'config-repo-branch-name' in the 'dsb-build-envs' input. If this does not succeed HEAD @ main branch will be used for configuration instead.
author: 'Direktoratet for samfunnssikkerhet og beredskap'
inputs:
  dsb-build-envs:
    description: |
      DSB build environment variables JSON.
      Required fields:
        See first step.
      Optional fields:
        pr-deploy-additional-helm-values (must exist, can be empty).
        pr-deploy-comment-additional-text (must exist, can be empty).
    required: true
runs:
  using: 'composite'
  steps:
    # we need to verify inputs since they are optional input to create-build-envs action
    # TODO revert to @v3
    - uses: dsb-norge/github-actions/ci-cd/require-build-envs@github-runners
      with:
        dsb-build-envs: ${{ inputs.dsb-build-envs }}
        require: |
          app-config-repo
          app-config-repo-token
          pr-deploy-app-config-branch
          pr-deploy-aks-cluster-name
          pr-deploy-aks-resource-group
          pr-deploy-aks-creds
          pr-deploy-k8s-namespace
          pr-deploy-k8s-application-name
          pr-deploy-argo-applications-url
          pr-deploy-comment-prefix
          application-name
          application-image-id
          application-version
          application-description

    # checkout config repo
    - uses: actions/checkout@v4
      with:
        repository: ${{ fromJSON(inputs.dsb-build-envs).app-config-repo }}
        ref: ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-app-config-branch }}
        token: ${{ fromJSON(inputs.dsb-build-envs).app-config-repo-token }}
        path: ./_pr-deploy

    - name: ðŸ¦• Deno install
      shell: bash
      run: deno install
      working-directory: ${{ github.action_path }}/../

    - id: prep-vars
      shell: bash
      env:
        INPUT_DSB_BUILD_ENVS: '${{ inputs.dsb-build-envs }}'
      run: deno run --allow-env --allow-read --allow-write ${{ github.action_path }}/action/1_prepare_deployment_vars.ts

    - id: check-dir-tree
      shell: bash
      run: deno run --allow-read --allow-env --allow-write ${{ github.action_path }}/action/2_check-dir-tree.ts

    - id: helm-values
      shell: bash
      env:
        INPUT_DSB_BUILD_ENVS: ${{ steps.prep-vars.outputs.modified_json }}
      run: deno run --allow-read --allow-env --allow-write ${{ github.action_path }}/action/3_helm-values.ts

    - uses: azure/login@v2
      with:
        creds: ${{ inputs.dsb-build-envs && fromJSON(inputs.dsb-build-envs).pr-deploy-aks-creds }}

    # set target kubernetes cluster to
    - uses: azure/aks-set-context@v4
      with:
        cluster-name: ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-aks-cluster-name }}
        resource-group: ${{ fromJSON(inputs.dsb-build-envs).pr-deploy-aks-resource-group }}
        admin: 'true'

    - id: helm-install
      shell: bash
      env:
        INPUT_DSB_BUILD_ENVS: ${{ steps.prep-vars.outputs.modified_json }}
        INPUT_HELM_COMMANDLINE_PARAMETER: ${{ steps.helm-values.outputs.commandline-parameter }}
      run: deno run --allow-read --allow-env --allow-run=helm ${{ github.action_path }}/action/4_helm-install.ts

    # create comment to be added to PR
    - id: create-comment
      shell: bash
      env:
        INPUT_DSB_BUILD_ENVS: ${{ steps.prep-vars.outputs.modified_json }}
      run: deno run --allow-read --allow-env --allow-write ${{ github.action_path }}/action/5_create-comment.ts

    # add comment to PR
    # TODO revert to @v3
    - uses: dsb-norge/github-actions/ci-cd/comment-on-pr@github-runners
      with:
        pr-comment-text: ${{ steps.create-comment.outputs.comment }}
        delete-comments-starting-with: ${{ steps.create-comment.outputs.prefix }}
        github-repo-token: ${{ fromJSON(inputs.dsb-build-envs).github-repo-token }}
