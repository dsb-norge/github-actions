name: "Configure Java and run maven command"
description: |
  Given the required input this action configures the specified version of java and runs a given maven command.
  Before maven is invoked the version and distribution of JDK specified in 'dsb-build-envs' is installed.
  Required inputs:
    - 'dsb-build-envs': JSON structure. Field 'application-source-path' should point to the pom.xml to use, or to a directory containing it.
  Optional inputs:
    - 'goals': list of goals to run. Defaults to 'clean verify install'.
    - 'arguments': list of arguments, e.g. '-DskipTests'
  The resulting maven invocation command is: mvn <arguments> --file <pom file> <goals>
inputs:
  dsb-build-envs:
    description: |
      DSB build environment variables JSON.
      Required fields:
          See first step.
    required: true
  goals:
    description: "Override goals to run when invoking maven."
    required: false
    default: "clean verify install"
  arguments:
    description: "Set arguments to use when invoking maven."
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    # Verify we have required inputs in order to avoid blank labels/tags
    - uses: dsb-norge/github-actions/ci-cd/require-build-envs@v2
      with:
        dsb-build-envs: ${{ inputs.dsb-build-envs }}
        require: |
          application-source-path
          java-distribution
          java-version
          maven-extra-envs-from-github
          maven-user-settings-repositories-yml

    # Determine maven command
    - id: mvn-cmd
      shell: bash
      run: |
        # Locate pom.xml

        set -o allexport; source "${{ github.action_path }}/helpers.sh"; set +o allexport;

        POM_FILE="${{ fromJSON(inputs.dsb-build-envs).application-source-path }}"
        [ ! -f "${POM_FILE}" ] && POM_FILE="${{ fromJSON(inputs.dsb-build-envs).application-source-path }}/pom.xml"
        [ ! -f "${POM_FILE}" ] && \
          log-error "Cannot find pom.xml. Both '${{ fromJSON(inputs.dsb-build-envs).application-source-path }}' and '${POM_FILE}' does not exist!" && \
          exit 1

        # Determine maven command
        MVN_CMD="mvn ${{ inputs.arguments }} --file ${POM_FILE} ${{ inputs.goals }}"

        log-info "Maven command: '${MVN_CMD}'"
        set-output 'mvn-cmd' "${MVN_CMD}"

    # configure maven settings
    - uses: dsb-norge/github-actions/ci-cd/configure-maven-settings@v2
      with:
        user-settings-repositories-yml: ${{ fromJSON(inputs.dsb-build-envs).maven-user-settings-repositories-yml }}

    # set up JDK
    - uses: actions/setup-java@v3
      with:
        distribution: ${{ fromJSON(inputs.dsb-build-envs).java-distribution }}
        java-version: ${{ fromJSON(inputs.dsb-build-envs).java-version }}
        overwrite-settings: false # do not overwrite settings.xml from the configure-maven-settings action

    - id: invoke-maven
      shell: bash
      env:
        EXTRA_ENVS_FROM_GH: "${{ fromJSON(inputs.dsb-build-envs).maven-extra-envs-from-github }}"
      run: |
        # Invoke maven

        set -o allexport; source "${{ github.action_path }}/helpers.sh"; set +o allexport;

        export-extra-envs "from github" "${EXTRA_ENVS_FROM_GH}"

        start-group "Invoke maven with goals"
        log-info "command string: '${{ steps.mvn-cmd.outputs.mvn-cmd }}'"
        ${{ steps.mvn-cmd.outputs.mvn-cmd }}
        end-group

        unset-extra-envs "from github" "${EXTRA_ENVS_FROM_GH}"
