name: "DSB Build and deploy Maven artefact"

# The following variables must available in the github 'vars' context:
#   - vars.ORG_MAVEN_REPO_USERNAME            <-- user with read and write to maven repo
#   - vars.ORG_AZURE_CONTAINER_REGISTRY_USER  <-- username of user with push+pull access to ACR, passed to the azure/docker-login action
#
# The following secrets must be available in the github 'secrets' context:
#   - secrets.ORG_MAVEN_REPO_TOKEN                            <-- token for maven repo user
#   - secrets.ORG_SONAR_TOKEN                                 <-- token for sonar integration
#   - secrets.ORG_JASYPT_LOCAL_ENCRYPTOR_PASSWORD             <-- jasypt password for local decryption of secrets during maven operations
#   - secrets.ORG_AZURE_CONTAINER_REGISTRY_PASSWORD           <-- password of user with push+pull access to ACR, passed to the azure/docker-login action

on:
  workflow_call:
    inputs:
      apps:
        type: string
        description: |
          specification of app to build and deploy to artifact repo.
          YAML list (as string) with specifications of applications to build and/or deploy.
          Required fields are:
            - application-name        - string
            - application-type        - string, always 'maven-library'
          For optional fields see possible inputs to the create-build-envs action.
        required: true

jobs:
  create-matrix:
    name: Create build matrix
    runs-on: [self-hosted, dsb-builder, linux, x64]
    defaults:
      run:
        shell: bash
    outputs:
      app-vars-matrix: ${{ steps.create-matrix.outputs.app-vars }}
      applications-version: ${{ steps.create-matrix.outputs.applications-version }}
    steps:
      # The create-app-vars-matrix action requires source code to be available
      - name: ðŸ§¹ Clean workspace
        # TODO revert to @v2
        uses: dsb-norge/github-actions/directory-recreate@snyk-test
      - name: â¬‡ Checkout working branch
        uses: actions/checkout@v3

      - name: ðŸŽ° Create app vars build matrix
        id: create-matrix
        # TODO revert to @v2
        uses: dsb-norge/github-actions/ci-cd/create-app-vars-matrix@snyk-test
        with:
          apps: ${{ inputs.apps }}

  build-and-deploy:
    name: Build and deploy to artifact repo
    needs: create-matrix
    runs-on: [self-hosted, dsb-builder, linux, x64]
    strategy:
      matrix: ${{ fromJSON(needs.create-matrix.outputs.app-vars-matrix) }}
    defaults:
      run:
        shell: bash
    steps:
      - name: ðŸ§¹ Clean workspace
        # TODO revert to @v2
        uses: dsb-norge/github-actions/directory-recreate@snyk-test

      - name: â¬‡ Checkout working branch
        uses: actions/checkout@v3

      - name: ðŸŽ° Generate DSB build variables
        id: build-env
        # TODO revert to @v2
        uses: dsb-norge/github-actions/ci-cd/create-build-envs@snyk-test
        with:
          app-vars: ${{ toJSON(matrix.app-vars) }}
          github-json: ${{ toJSON(github) }}
          secrets-json: ${{ toJSON(secrets) }}
          vars-json: ${{ toJSON(vars) }}
          sonarqube-token: ${{ secrets.ORG_SONAR_TOKEN }}
          jasypt-password: ${{ secrets.ORG_JASYPT_LOCAL_ENCRYPTOR_PASSWORD }}
          github-repo-token: ${{ secrets.GITHUB_TOKEN }}
          acr-username: ${{ vars.ORG_AZURE_CONTAINER_REGISTRY_USER }}
          acr-password: ${{ secrets.ORG_AZURE_CONTAINER_REGISTRY_PASSWORD }}
          snyk-token: ${{ secrets.ORG_SNYK_API_TOKEN }}

      - name: "âš’ Library: Build and analyze with Maven"
        if: |
          ! ( github.event_name == 'pull_request' && github.event.action == 'closed' )
          && matrix.app-vars.application-type == 'maven-library'
        # TODO revert to @v2
        uses: dsb-norge/github-actions/ci-cd/build-maven-project@snyk-test
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

  # create a global result indicating if workflow steps succeeded or not,
  # handy for branch protection rules
  ci-cd-conclusion:
    if: always()
    name: ci-cd-conclusion
    needs: [create-matrix, build-and-deploy]
    runs-on: [self-hosted, dsb-builder, linux, x64]
    defaults:
      run:
        shell: bash
    steps:
      - run: exit 1
        # for explanation of '>-' below see https://stackoverflow.com/a/67532120/4907315
        # job 'result': possible values are 'success', 'failure', 'cancelled', or 'skipped'
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
