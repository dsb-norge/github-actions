name: 'DSB Build, push and deploy'

on:
  workflow_call:
    inputs:
      apps:
        type: string
        description: |
          Specification of applications to build and/or deploy.
          YAML list (as string) with specifications of applications to build and/or deploy.
          Required fields are:
            - application-name        - string
          For optional fields see possible inputs to the create-build-envs action.
        required: true
    secrets:
      maven-repo-username:
        required: true
      maven-repo-token:
        required: true
      sonarqube-token:
        required: true
      jasypt-password:
        required: true
      acr-username:
        required: true
      acr-password:
        required: true
      github-repo-token:
        required: true
      app-config-repo-token:
        required: true
      pr-deploy-aks-creds:
        required: true
      acr-service-principal:
        required: true

jobs:
  create-matrix:
    name: Create build matrix
    runs-on: [self-hosted, dsb-builder, linux, x64]
    defaults:
      run:
        shell: bash
    outputs:
      app-vars-matrix: ${{ steps.create-matrix.outputs.app-vars }}
      applications-version: ${{ steps.create-matrix.outputs.applications-version }}

    steps:
      # The create-app-vars-matrix action requires source code to be available
      - name: üßπ Clean workspace
        uses: dsb-norge/github-actions/directory-recreate@npm-e2e
      - name: ‚¨á Checkout working branch
        uses: actions/checkout@v3

      - name: üé∞ Create app vars build matrix
        id: create-matrix
        uses: dsb-norge/github-actions/ci-cd/create-app-vars-matrix@npm-e2e
        with:
          apps: ${{ inputs.apps }}

  build-deploy:
    name: Build and deploy
    needs: create-matrix
    runs-on: [self-hosted, dsb-builder, linux, x64]
    strategy:
      matrix: ${{ fromJSON(needs.create-matrix.outputs.app-vars-matrix) }}
      fail-fast: false # allow all paralell jobs to continiue even if one fails

    defaults:
      run:
        shell: bash

    steps:
      - name: üßπ Clean workspace
        uses: dsb-norge/github-actions/directory-recreate@npm-e2e

      - name: ‚¨á Checkout working branch
        uses: actions/checkout@v3

      - name: üé∞ Generate DSB build variables
        id: build-env
        uses: dsb-norge/github-actions/ci-cd/create-build-envs@npm-e2e
        with:
          app-vars: ${{ toJSON(matrix.app-vars) }}
          maven-repo-username: ${{ secrets.maven-repo-username }}
          maven-repo-token: ${{ secrets.maven-repo-token }}
          sonarqube-token: ${{ secrets.sonarqube-token }}
          jasypt-password: ${{ secrets.jasypt-password }}
          acr-username: ${{ secrets.acr-username }}
          acr-password: ${{ secrets.acr-password }}
          github-repo-token: ${{ secrets.github-repo-token }}
          app-config-repo-token: ${{ secrets.app-config-repo-token }}
          pr-deploy-aks-creds: ${{ secrets.pr-deploy-aks-creds }}
          acr-service-principal: ${{ secrets.acr-service-principal }}

      - name: '‚öí Spring Boot app: Build and analyze with Maven'
        # Skip step when closing a PR, and only run for spring-boot apps
        if: |
          ! ( github.event_name == 'pull_request' && github.event.action == 'closed' )
          && matrix.app-vars.application-type == 'spring-boot'
        uses: dsb-norge/github-actions/ci-cd/build-maven-project@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: 'üê≥ Spring Boot app: Build, tag and push docker image'
        # Run step when:
        #   - app is spring-boot
        #   - running from PRa nd not closing
        #   - push or manual on default branch or when specifically allowing deploy from non-default branch
        if: |
          matrix.app-vars.application-type == 'spring-boot'
          && (
            ( github.event_name == 'pull_request' && github.event.action != 'closed' )
            || ((github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
              && (
                fromJSON(steps.build-env.outputs.json).caller-repo-is-on-default-branch
                || ( ! fromJSON(steps.build-env.outputs.json).static-deploy-from-default-branch-only )
          )))
        uses: dsb-norge/github-actions/ci-cd/build-spring-boot-image@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: '‚öí Vue.js app: Build and test with npm'
        # Skip step when closing a PR, and only run for vue apps
        if: |
          ! ( github.event_name == 'pull_request' && github.event.action == 'closed' )
          && matrix.app-vars.application-type == 'vue'
        uses: dsb-norge/github-actions/ci-cd/build-nodejs-project@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: 'üê≥ Vue.js app: Build, tag and push docker image for vue'
        # Run step when:
        #   - app is vue
        #   - running from PR and not closing
        #   - push or manual on default branch or when specifically allowing deploy from non-default branch
        if: |
          matrix.app-vars.application-type == 'vue'
          && (
            ( github.event_name == 'pull_request' && github.event.action != 'closed' )
            || ((github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
              && (
                fromJSON(steps.build-env.outputs.json).caller-repo-is-on-default-branch
                || ( ! fromJSON(steps.build-env.outputs.json).static-deploy-from-default-branch-only )
          )))
        uses: dsb-norge/github-actions/ci-cd/build-docker-image@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: üêô Deploy to ephemeral PR environment
        # Run step when:
        #   - on PR
        #     - but not when closing PR
        #     - and not when event was triggered by renovate-bot
        #   (allows deploy when a user pushes to PR branch created by renovate-bot, as github.event.action is then the user)
        if: |
          github.event_name == 'pull_request'
          && github.event.action != 'closed'
          && github.actor != 'renovate[bot]'
        uses: dsb-norge/github-actions/ci-cd/deploy-to-ephemeral@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: üóë Teardown of ephemeral PR environment
        # Step only runs when closing a PR
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        uses: dsb-norge/github-actions/ci-cd/teardown-pr-environment@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: üóë Prune application docker images from ACR
        # Run step when:
        #   - push or manual on default branch or when specifically allowing deploy from non-default branch
        if: |
          (github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
          && (( fromJSON(steps.build-env.outputs.json).caller-repo-is-on-default-branch )
            || ( ! fromJSON(steps.build-env.outputs.json).static-deploy-from-default-branch-only )
          )
        uses: dsb-norge/github-actions/ci-cd/prune-images-from-acr@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

      - name: üóë Delete PR docker images from ACR
        # Step only runs when closing a PR
        # Step runs even if previous steps have failed, with the exception of 'build-env' which is required
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && always() && steps.build-env.outcome == 'success'
        uses: dsb-norge/github-actions/ci-cd/delete-pr-images-from-acr@npm-e2e
        with:
          dsb-build-envs: ${{ steps.build-env.outputs.json }}

  deploy-to-static:
    name: Deploy app(s) to static environments
    # This job is currently just for deploy to static environments, run when:
    #   - push or manually triggered
    if: |
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
    needs: [create-matrix, build-deploy]
    runs-on: [self-hosted, dsb-builder, linux, x64]
    defaults:
      run:
        shell: bash
    steps:
      - name: üßπ Clean workspace
        uses: dsb-norge/github-actions/directory-recreate@v1

      - name: ‚¨á Checkout working branch
        uses: actions/checkout@v3

      - name: üíæ Read build-envs from matrix job(s)
        id: read-build-envs
        uses: dsb-norge/github-actions/ci-cd/collect-build-envs@npm-e2e
        with:
          build-envs-artifact-name: build-envs-${{ needs.create-matrix.outputs.applications-version }}

      - name: ‚úî Check if deploy is allowed from calling branch
        id: deploy-static-check
        # This check is required to block deploys when workflow is manually triggered from a non-default branch
        uses: dsb-norge/github-actions/ci-cd/deploy-multiple-to-static-is-allowed@v1
        with:
          dsb-build-envs-array: ${{ steps.read-build-envs.outputs.json-array }}

      - name: üêô Deploy apps to static environment(s)
        # Step only runs when deploy was allowed by deploy-multiple-to-static-is-allowed
        if: steps.deploy-static-check.outputs.result == 'true'
        uses: dsb-norge/github-actions/ci-cd/deploy-multiple-to-static@npm-e2e
        with:
          dsb-build-envs-array: ${{ steps.read-build-envs.outputs.json-array }}
          app-config-repo-token: ${{ secrets.app-config-repo-token }}

      - name: üè∑Ô∏è Tag current git commit with application version
        # Step only runs when deploy was allowed by deploy-multiple-to-static-is-allowed
        if: steps.deploy-static-check.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.create-matrix.outputs.applications-version }}',
              sha: context.sha
            })
