name: 'ðŸ”‘ Obtain GitHub app installation access token'
description: |
  Given the required input this action returns a GitHub App installation access token that enables a GitHub App to make
  authenticated API requests for the app's installation on an organization or individual account.
inputs:
  github-app-id:
    description: |
      Id of a GitHub App.
      ref. https://github.com/marketplace?type=apps
    required: true
  github-app-installation-id:
    description: 'Unique identifier of the installation of the GitHub App installed on an organization or individual account.'
    required: true
  github-app-private-key:
    description: |
      The private key to use when authenticating as a GitHub App. This key is used to sign the JWT.
      ref. https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-as-a-github-app
    required: true
  token-request-body:
    description: |
      Request body of the installation access token POST request. Can be used to scope down the aquired token.
      ref. https://docs.github.com/en/rest/apps/apps?apiVersion=2022-11-28#create-an-installation-access-token-for-an-app
    required: false
    default: ''
outputs:
  github-token:
    description: |
      The obtained GitHub App installation access token. This can ex. be used to make REST API requests as the App.
    value: ${{ steps.get-token.outputs.github-token }}

runs:
  using: 'composite'
  steps:
    - name: ðŸ¦• Deno install
      shell: bash
      run: deno install
      working-directory: ${{ github.action_path }}

    - id: get-token
      shell: bash
      env:
        INPUT_GITHUB-APP-ID: ${{ inputs.github-app-id }}
        INPUT_GITHUB-APP-INSTALLATION-ID: ${{ inputs.github-app-installation-id }}
        INPUT_TOKEN-REQUEST-BODY: ${{ inputs.token-request-body }}
      run: |
        PKCS8_KEY=$(openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt <<EOF
        ${{ inputs.github-app-private-key }}
        EOF
        )

        export INPUT_GITHUB_APP_PRIVATE_KEY="$PKCS8_KEY"
        deno run --allow-read --allow-write --allow-env --allow-net "${{ github.action_path }}/action/action.ts"